---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins2
  namespace: ci
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ci-self-rolebinding
  namespace: ci
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
  - kind: ServiceAccount
    name: jenkins2
    namespace: ci
---
apiVersion: v1
kind: Pod
metadata:
  namespace: ci
  name: jenkins-pod
  labels: 
    app: jenkins
spec:
  terminationGracePeriodSeconds: 10
  serviceAccountName: jenkins2
  containers:
  - name: jenkins
    image: jenkins/jenkins:lts-alpine
    stdin: true
    tty: true
    securityContext:                     
      runAsUser: 0                      #设置以ROOT用户运行容器
      privileged: true 
    ports:
    - containerPort: 8080
    volumeMounts:
    - name: pvc1
      mountPath: /var/jenkins_home
   # - name: dockersock
   #   mountPath: /var/run/docker.sock
   # - name: docker1
   #   mountPath: /usr/bin/docker
    - name: k8s-config
      mountPath: /root/.kube/config
    ports:
    - containerPort: 8080
      name: web
      protocol: TCP
    - containerPort: 50000
      name: agent
      protocol: TCP
    livenessProbe:
      httpGet:
        path: /login
        port: 8080
      initialDelaySeconds: 60
      timeoutSeconds: 5
      failureThreshold: 12
    readinessProbe:
      httpGet:
        path: /login
        port: 8080
      initialDelaySeconds: 60
      timeoutSeconds: 5
      failureThreshold: 12
  securityContext:
    fsGroup: 1000
  volumes:
    - name: pvc1
     # persistentVolumeClaim:
      #  claimName: pvc1-nfs
      persistentVolumeClaim:
        claimName: pvc-host
     # hostPath:
     #   path: /data/kubernetes/jenkins_home
   # - name: dockersock
   #   hostPath:
   #     path: /var/run/docker.sock
   # - name: docker1
    #  hostPath:
    #    path: /usr/bin/docker
    - name: k8s-config
      hostPath:
        path: /root/.kube/config
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: ci
spec:
  selector:
    app: jenkins
  ports:
  - name: tcp
    protocol: TCP
    port: 8080
    nodePort: 30080
  - name: son
    protocol: TCP
    port: 50000
    targetPort: 50000
  type: NodePort
---
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#  name: pvc1-nfs
#  namespace: ci
#spec:
#  accessModes:
#    - ReadWriteMany
#  volumeName: pv1-nfs
#  resources:
#    requests:
#      storage: 20Gi
#---
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name:  pv1-nfs
#  namespace: ci
#  labels:
#    pv: pv1-nfs
#spec:
#  capacity:
#    storage: 20Gi
#  accessModes:
#    - ReadWriteMany
#  persistentVolumeReclaimPolicy: Retain
#  mountOptions:         #NFS挂载选项
#    - hard
#    - nfsvers=4.1    
#  nfs:
#    path: /data/kubernetes/jenkins_home
#    server: 121.4.241.131
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-host
  namespace: ci
spec:
  storageClassName: jenkins-workspace
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/kubernetes/jenkins_home"
  nodeAffinity: # 这里就设置了节点亲和
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - tx # 这里我们使用node01节点，该节点有/data/vol1路径
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-host
  namespace: ci
spec:
  storageClassName: jenkins-workspace
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
